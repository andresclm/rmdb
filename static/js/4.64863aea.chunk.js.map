{"version":3,"sources":["pages/Details/components/Badge/index.tsx","pages/Details/components/Fact/index.tsx","pages/Details/components/Fact/formatters.ts","pages/Details/queries.ts","pages/Details/utils.ts","pages/Details/index.tsx"],"names":["Badge","children","className","Fact","name","data","formatter","style","justifyItems","undefined","moneyFormatter","toLocaleString","getDetails","_key","id","a","detailsQuery","fetch","BASE_URL","API_KEY","response","json","backdrop_path","Vibrant","from","BASE_IMAGE_URL","backdropSize","sm","getPalette","palette","movieDetails","credits","cast","crewPeople","crew","reduce","accu","crewPerson","job","directors","writters","recommendations","results","vibrantColor","DarkVibrant","getHex","videos","filter","video","type","facts","key","Date","toUTCString","slice","Details","useParams","useQuery","staleTime","Infinity","isLoading","useTrailerModal","showButton","showModal","TrailerModal","PlayButton","Loading","srcSet","md","imageNotFound","media","src","alt","title","backgroundColor","poster_path","posterSize","release_date","getYear","getFullYear","genres","map","genre","runtime","toHourFormat","tagline","CircularProgress","value","vote_average","overview","length","Carousel","titleClass","cardType","breakpointsConfig","slidesPerView","sliderClass","wrapperClass","fact","cssMode"],"mappings":"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","file":"static/js/4.64863aea.chunk.js","sourcesContent":["import React from \"react\";\n\ntype BadgeProps = {\n  children: React.ReactNode;\n};\n\nexport const Badge = ({ children }: BadgeProps): React.ReactElement => (\n  <span className=\"text-xs border px-2 py-1 rounded-md w-auto\">{children}</span>\n);\n","import React from \"react\";\nimport { FactProps } from \"./types\";\n\nexport const Fact = ({\n  name,\n  data,\n  formatter,\n}: FactProps): React.ReactElement => (\n  <section className=\"grid grid-cols-2\" style={{ justifyItems: \"center\" }}>\n    <h3 className=\"text-lg text-gray-800 font-light tracking-wider\">{name}</h3>\n    <p className=\"text-gray-700\">\n      {formatter === undefined ? (data as string | number) : formatter(data)}\n    </p>\n  </section>\n);\n","import { FactConfig } from \"./types\";\nimport { SpokenLanguage } from \"../../types\";\n\ntype FactFormatter = FactConfig[\"formatter\"];\n\nexport const dateFormatter: FactFormatter = (data): string =>\n  new Date(data as string).toUTCString().slice(0, 16);\n\nexport const langFormatter: FactFormatter = (data): string =>\n  (data as SpokenLanguage[])[0]?.name ?? undefined;\n\nexport const moneyFormatter: FactFormatter = (data): string =>\n  `$ ${(data as number)?.toLocaleString()}` ?? undefined;\n","import { MovieDetailsAttr, CastPersonAttr, VideoAttr } from \"./types\";\nimport { MovieItemAttr } from \"../../components/Carousel/types\";\nimport {\n  BASE_URL,\n  API_KEY,\n  BASE_IMAGE_URL,\n  backdropSize,\n} from \"../../apiConfig\";\nimport Vibrant from \"node-vibrant\";\nimport { getPrincipalCrew } from \"./utils\";\n\nexport const getDetails = async (\n  _key: string,\n  id: string\n): Promise<\n  Omit<MovieDetailsAttr, \"credits\" | \"recommendations\" | \"videos\"> & {\n    credits: {\n      cast: CastPersonAttr[];\n      directors: string[];\n      writters: string[];\n    };\n    recommendations: MovieItemAttr[];\n    vibrantColor: string;\n    videos: VideoAttr[];\n  }\n> => {\n  // Query\n  const detailsQuery = fetch(\n    `${BASE_URL}movie/${id}?api_key=${API_KEY}&append_to_response=credits,recommendations,videos`\n  );\n\n  // Requests\n  const response = await detailsQuery;\n  const data = (await response.json()) as MovieDetailsAttr;\n  const palette = data.backdrop_path\n    ? await Vibrant.from(\n        `${BASE_IMAGE_URL}${backdropSize.sm}/${data.backdrop_path}`\n      ).getPalette()\n    : undefined;\n\n  // Formatter\n  const movieDetails = {\n    ...data,\n    credits: {\n      cast: data.credits.cast,\n      ...getPrincipalCrew(data.credits.crew),\n    },\n    recommendations: data.recommendations.results,\n    vibrantColor: palette?.DarkVibrant?.getHex() || \"#555555\",\n    videos: data.videos.results.filter((video) => video.type !== \"Trailer\"),\n  };\n\n  return movieDetails;\n};\n","import { CrewPersonAttr } from \"./types\";\n\nexport const getPrincipalCrew = (\n  crewPeople: CrewPersonAttr[]\n): {\n  directors: string[];\n  writters: string[];\n} =>\n  crewPeople.reduce(\n    (accu, crewPerson) => {\n      switch (crewPerson.job) {\n        case \"Director\":\n          return { ...accu, directors: [...accu.directors, crewPerson.name] };\n        case \"Writer\":\n          return { ...accu, writters: [...accu.writters, crewPerson.name] };\n        default:\n          return accu;\n      }\n    },\n    {\n      directors: [] as string[],\n      writters: [] as string[],\n    }\n  );\n","import React, { Fragment } from \"react\";\nimport { getYear, toHourFormat } from \"../../utils/formats\";\nimport { Badge } from \"./components/Badge\";\nimport { CircularProgress } from \"../../components/CircularProgress\";\nimport { Fact } from \"./components/Fact\";\nimport { Carousel } from \"../../components/Carousel\";\nimport { BASE_IMAGE_URL, backdropSize, posterSize } from \"../../apiConfig\";\nimport {\n  dateFormatter,\n  langFormatter,\n  moneyFormatter,\n} from \"./components/Fact/formatters\";\nimport { FactConfig } from \"./components/Fact/types\";\nimport { useQuery } from \"react-query\";\nimport { useParams } from \"react-router-dom\";\nimport { getDetails } from \"./queries\";\nimport { Loading } from \"../../components/Loading\";\nimport { useTrailerModal } from \"../../utils/hooks\";\nimport imageNotFound from \"../../assets/image-not-found.svg\";\n\nconst facts: FactConfig[] = [\n  { name: \"Status\", key: \"status\" },\n  {\n    name: \"Release date\",\n    key: \"release_date\",\n    formatter: dateFormatter,\n  },\n  {\n    name: \"Language\",\n    key: \"spoken_languages\",\n    formatter: langFormatter,\n  },\n  {\n    name: \"Budget\",\n    key: \"budget\",\n    formatter: moneyFormatter,\n  },\n  {\n    name: \"Revenue\",\n    key: \"revenue\",\n    formatter: moneyFormatter,\n  },\n];\n\nconst Details = (): React.ReactElement => {\n  const { id } = useParams<{ id: string }>();\n\n  const { data: movieDetails, isLoading } = useQuery(\n    [\"details\", id],\n    getDetails,\n    {\n      staleTime: Infinity,\n    }\n  );\n\n  const { showButton, showModal, TrailerModal, PlayButton } = useTrailerModal(\n    id\n  );\n\n  return isLoading || movieDetails === undefined ? (\n    <Loading />\n  ) : (\n    <section className=\"pb-16 md:pt-24\">\n      <div className=\"relative\">\n        <picture>\n          <source\n            srcSet={\n              movieDetails.backdrop_path\n                ? `${BASE_IMAGE_URL}${backdropSize.md}${movieDetails.backdrop_path}`\n                : imageNotFound\n            }\n            media=\"(min-width: 768px)\"\n          />\n          <img\n            className=\"block absolute left-0 z-0 object-cover w-full h-full bg-gray-500\"\n            style={{ filter: \"grayscale(1) contrast(1.5)\" }}\n            src={\n              movieDetails.backdrop_path\n                ? `${BASE_IMAGE_URL}${backdropSize.sm}${movieDetails.backdrop_path}`\n                : imageNotFound\n            }\n            alt={`${movieDetails.title} backdrop`}\n          />\n        </picture>\n        <div\n          className=\"block absolute left-0 z-10 w-full h-full\"\n          style={{\n            backgroundColor: `${movieDetails.vibrantColor}E6`,\n          }}\n        />\n        <article className=\"px-5 md:px-6 py-10 md:py-10 flex flex-col md:flex-row relative z-20 max-w-5xl mx-auto\">\n          <picture className=\"w-full md:w-4/12\">\n            <source\n              srcSet={\n                movieDetails.poster_path\n                  ? `${BASE_IMAGE_URL}${posterSize.md}${movieDetails.poster_path}`\n                  : imageNotFound\n              }\n              media=\"(min-width: 500px) and (max-width: 768px)\"\n            />\n            <img\n              className=\"w-full bg-gray-400 rounded-md md:rounded shadow-md\"\n              src={\n                movieDetails.poster_path\n                  ? `${BASE_IMAGE_URL}${posterSize.sm}${movieDetails.poster_path}`\n                  : imageNotFound\n              }\n              alt={`${movieDetails.title} poster`}\n            />\n          </picture>\n          <div className=\"mt-6 md:mt-0 md:ml-6 md:w-8/12 text-gray-100\">\n            <h2 className=\"text-4xl\">{movieDetails.title}</h2>\n            <div className=\"mt-3\">\n              <span className=\"mr-6\">\n                <Badge>\n                  {movieDetails.release_date\n                    ? getYear(movieDetails.release_date)\n                    : new Date().getFullYear() + 1}\n                </Badge>\n              </span>\n              <span className=\"mr-6\">\n                {movieDetails.genres.slice(0, 4).map((genre) => (\n                  <span className=\"mr-1\" key={genre.id}>\n                    <Badge>{genre.name}</Badge>\n                  </span>\n                ))}\n              </span>\n              <p className=\"text-gray-200 hidden sm:inline\">\n                {movieDetails.runtime\n                  ? toHourFormat(movieDetails.runtime)\n                  : toHourFormat(200)}\n              </p>\n            </div>\n            <p className=\"italic mt-5\">\n              {movieDetails.tagline ? `\"${movieDetails.tagline}\"` : undefined}\n            </p>\n            <div className=\"flex items-center mt-5\">\n              <div className=\"w-12 mr-8\">\n                <CircularProgress\n                  value={\n                    movieDetails.vote_average === 0\n                      ? 5\n                      : movieDetails.vote_average\n                  }\n                />\n              </div>\n              {showButton && <PlayButton />}\n            </div>\n            <h3 className=\"mt-5 text-xs leading-4 uppercase text-gray-400 tracking-wide\">\n              Overview\n            </h3>\n            <p className=\"mt-2 tracking-wide text-sm\">\n              {movieDetails.overview}\n            </p>\n            {([\"directors\", \"writters\"] as const).map(\n              (job) =>\n                movieDetails.credits[job].length > 0 && (\n                  <Fragment key={job}>\n                    <h3 className=\"uppercase text-gray-400 tracking-wide text-xs mt-5\">\n                      {job}\n                    </h3>\n                    {movieDetails.credits[job].map((name) => (\n                      <span key={name} className=\"inline-block mt-2 mr-3\">\n                        <Badge>{name}</Badge>\n                      </span>\n                    ))}\n                  </Fragment>\n                )\n            )}\n          </div>\n        </article>\n      </div>\n      {movieDetails.credits.cast.length > 0 && (\n        <Carousel\n          title=\"Starring\"\n          titleClass=\"pl-5 md:pl-10 pb-4 md:pb-6\"\n          data={movieDetails.credits.cast.slice(0, 30)}\n          cardType=\"castPerson\"\n          breakpointsConfig={{\n            \"0\": { slidesPerView: 4 },\n            \"470\": { slidesPerView: 5 },\n            \"575\": { slidesPerView: 6 },\n            \"1024\": { slidesPerView: 7 },\n          }}\n          sliderClass=\"px-5 md:px-0 md:mx-5\"\n          wrapperClass=\"pt-10\"\n        />\n      )}\n      <hr className=\"w-2/3 my-8 mx-auto border-gray-900 md:max-w-3xl\" />\n      <div className=\"h-40 w-4/5 mx-auto flex flex-col justify-between md:max-w-2xl\">\n        {facts.map(\n          (fact) =>\n            movieDetails[fact.key] !== 0 && (\n              <Fact\n                name={fact.name}\n                formatter={fact.formatter}\n                data={movieDetails[fact.key]}\n                key={fact.key}\n              />\n            )\n        )}\n      </div>\n      <hr className=\"w-2/3 my-8 mx-auto border-gray-900 md:max-w-3xl\" />\n      {movieDetails.recommendations.length > 0 && (\n        <Carousel\n          title=\"Recommended\"\n          data={movieDetails.recommendations}\n          cardType=\"movie\"\n          titleClass=\"pl-5 pb-4 md:pl-10 md:pb-6\"\n          sliderClass=\"px-5 md:px-0 md:mx-5\"\n          breakpointsConfig={{\n            \"0\": { slidesPerView: 3 },\n            \"575\": { slidesPerView: 4 },\n            \"765\": { slidesPerView: 5 },\n            \"1024\": { slidesPerView: 6 },\n          }}\n        />\n      )}\n      {movieDetails.videos.length > 0 && (\n        <Fragment>\n          <hr className=\"w-2/3 my-8 mx-auto border-gray-900 md:max-w-3xl\" />\n          <Carousel\n            title=\"Videos\"\n            data={movieDetails.videos}\n            cardType=\"trailer\"\n            titleClass=\"pl-5 pb-4 md:pl-10 md:pb-6\"\n            sliderClass=\"mx-5\"\n            breakpointsConfig={{\n              \"0\": { slidesPerView: 1, cssMode: true },\n              \"575\": { slidesPerView: 2, cssMode: true },\n              \"900\": { slidesPerView: 3, cssMode: true },\n            }}\n          />\n        </Fragment>\n      )}\n      {showModal && <TrailerModal />}\n    </section>\n  );\n};\n\nexport default Details;\n"],"sourceRoot":""}